(in-package trie.test)

(defvar *entity-reference* 
    '((#\Æ "&AElig" "&#198;" "&#x00C6;")
      (#\Æ "&AElig;"  "&#x00C6;")
      (#\& "&AMP" "&#38;" "&#x0026;")
      (#\& "&AMP;" "&#38;" "&#x0026;")
      (#\Á "&Aacute" "&#193;" "&#x00C1;")
      (#\Á "&Aacute;" "&#193;" "&#x00C1;")
      (#\Ă "&Abreve;" "&#258;" "&#x0102;")
      (#\Â "&Acirc" "&#194;" "&#x00C2;")
      (#\Â "&Acirc;" "&#194;" "&#x00C2;")
      (#\А "&Acy;" "&#1040;" "&#x0410;")
      (#\𝔄 "&Afr;" "&#120068;" "&#xD835;" "&#xDD04;")
      (#\À "&Agrave" "&#192;" "&#x00C0;")
      (#\À "&Agrave;" "&#192;" "&#x00C0;")
      (#\Α "&Alpha;" "&#913;" "&#x0391;")
      (#\Ā "&Amacr;" "&#256;" "&#x0100;")
      (#\⩓ "&And;" "&#10835;" "&#x2A53;")
      (#\Ą "&Aogon;" "&#260;" "&#x0104;")
      (#\𝔸 "&Aopf;" "&#120120;" "&#xDD38;")
      (#\⁡ "&ApplyFunction;" "&#8289;" "&#x2061;")
      (#\Å "&Aring" "&#197;" "&#x00C5;")
      (#\Å "&Aring;" "&#197;" "&#x00C5;")
      (#\𝒜 "&Ascr;" "&#119964;" "&#xDC9C;")
      (#\≔ "&Assign;" "&#8788;" "&#x2254;")
      (#\Ã "&Atilde" "&#195;" "&#x00C3;")
      (#\Ã "&Atilde;" "&#195;" "&#x00C3;")
      (#\Ä "&Auml" "&#196;" "&#x00C4;")
      (#\Ä "&Auml;" "&#196;" "&#x00C4;")
      (#\∖ "&Backslash;" "&#8726;" "&#x2216;")
      (#\⫧ "&Barv;" "&#10983;" "&#x2AE7;")
      (#\⌆ "&Barwed;" "&#8966;" "&#x2306;")
      (#\Б "&Bcy;" "&#1041;" "&#x0411;")
      (#\∵ "&Because;" "&#8757;" "&#x2235;")
      (#\ℬ "&Bernoullis;" "&#8492;" "&#x212C;")
      (#\Β "&Beta;" "&#914;" "&#x0392;")
      (#\𝔅 "&Bfr;" "&#120069;" "&#xDD05;")
      (#\𝔹 "&Bopf;" "&#120121;" "&#xDD39;")
      (#\˘ "&Breve;" "&#728;" "&#x02D8;")
      (#\ℬ "&Bscr;" "&#8492;" "&#x212C;")
      (#\≎ "&Bumpeq;" "&#8782;" "&#x224E;")
      (#\Ч "&CHcy;" "&#1063;" "&#x0427;")
      (#\© "&COPY" "&#169;" "&#x00A9;")
      (#\© "&COPY;" "&#169;" "&#x00A9;")
      (#\Ć "&Cacute;" "&#262;" "&#x0106;")
      (#\⋒ "&Cap;" "&#8914;" "&#x22D2;")
      (#\ⅅ "&CapitalDifferentialD;" "&#8517;" "&#x2145;")
      (#\ℭ "&Cayleys;" "&#8493;" "&#x212D;")
      (#\Č "&Ccaron;" "&#268;" "&#x010C;")
      (#\Ç "&Ccedil" "&#199;" "&#x00C7;")
      (#\Ç "&Ccedil;" "&#199;" "&#x00C7;")
      (#\Ĉ "&Ccirc;" "&#264;" "&#x0108;")
      (#\∰ "&Cconint;" "&#8752;" "&#x2230;")
      (#\Ċ "&Cdot;" "&#266;" "&#x010A;")
      (#\¸ "&Cedilla;" "&#184;" "&#x00B8;")
      (#\· "&CenterDot;" "&#183;" "&#x00B7;")
      (#\ℭ "&Cfr;" "&#8493;" "&#x212D;")
      (#\Χ "&Chi;" "&#935;" "&#x03A7;")
      (#\⊙ "&CircleDot;" "&#8857;" "&#x2299;")
      (#\⊖ "&CircleMinus;" "&#8854;" "&#x2296;")
      (#\⊕ "&CirclePlus;" "&#8853;" "&#x2295;")
      (#\⊗ "&CircleTimes;" "&#8855;" "&#x2297;")
      (#\∲ "&ClockwiseContourIntegral;" "&#8754;" "&#x2232;")
      (#\” "&CloseCurlyDoubleQuote;" "&#8221;" "&#x201D;")
      (#\’ "&CloseCurlyQuote;" "&#8217;" "&#x2019;")
      (#\∷ "&Colon;" "&#8759;" "&#x2237;")
      (#\⩴ "&Colone;" "&#10868;" "&#x2A74;")
      (#\≡ "&Congruent;" "&#8801;" "&#x2261;")
      (#\∯ "&Conint;" "&#8751;" "&#x222F;")
      (#\∮ "&ContourIntegral;" "&#8750;" "&#x222E;")
      (#\ℂ "&Copf;" "&#8450;" "&#x2102;")
      (#\∐ "&Coproduct;" "&#8720;" "&#x2210;")
      (#\∳ "&CounterClockwiseContourIntegral;" "&#8755;" "&#x2233;")
      (#\⨯ "&Cross;" "&#10799;" "&#x2A2F;")
      (#\𝒞 "&sdCscr;" "&#119966;" "&#xDC9E;")
      (#\⋓ "&Cup;" "&#8915;" "&#x22D3;")
      (#\≍ "&CupCap;" "&#8781;" "&#x224D;")
      (#\ⅅ "&DD;" "&#8517;" "&#x2145;")
      (#\⤑ "&DDotrahd;" "&#10513;" "&#x2911;")
      (#\Ђ "&DJcy;" "&#1026;" "&#x0402;")
      (#\Ѕ "&DScy;" "&#1029;" "&#x0405;")
      (#\Џ "&DZcy;" "&#1039;" "&#x040F;")
      (#\‡ "&Dagger;" "&#8225;" "&#x2021;")
      (#\↡ "&Darr;" "&#8609;" "&#x21A1;")
      (#\⫤ "&Dashv;" "&#10980;" "&#x2AE4;")
      (#\Ď "&Dcaron;" "&#270;" "&#x010E;")
      (#\Д "&Dcy;" "&#1044;" "&#x0414;")
      (#\∇ "&Del;" "&#8711;" "&#x2207;")
      (#\Δ "&Delta;" "&#916;" "&#x0394;")
      (#\𝔇 "&Dfr;" "&#120071;" "&#xDD07;")
      (#\´ "&DiacriticalAcute;" "&#180;" "&#x00B4;")
      (#\˙ "&DiacriticalDot;" "&#729;" "&#x02D9;")
      (#\˝ "&DiacriticalDoubleAcute;" "&#733;" "&#x02DD;")
      (#\` "&DiacriticalGrave;" "&#96;" "&#x0060;")
      (#\˜ "&DiacriticalTilde;" "&#732;" "&#x02DC;")
      (#\⋄ "&Diamond;" "&#8900;" "&#x22C4;")
      (#\ⅆ "&DifferentialD;" "&#8518;" "&#x2146;")
      (#\𝔻 "&Dopf;" "&#120123;" "&#xDD3B;")
      (#\¨ "&Dot;" "&#168;" "&#x00A8;")
      (#\⃜ "&DotDot;" "&#8412;" "&#x20DC;")
      (#\≐ "&DotEqual;" "&#8784;" "&#x2250;")
      (#\∯ "&DoubleContourIntegral;" "&#8751;" "&#x222F;")
      (#\¨ "&DoubleDot;" "&#168;" "&#x00A8;")
      (#\⇓ "&DoubleDownArrow;" "&#8659;" "&#x21D3;")
      (#\⇐ "&DoubleLeftArrow;" "&#8656;" "&#x21D0;")
      (#\⇔ "&DoubleLeftRightArrow;" "&#8660;" "&#x21D4;")
      (#\⫤ "&DoubleLeftTee;" "&#10980;" "&#x2AE4;")
      (#\⟸ "&DoubleLongLeftArrow;" "&#10232;" "&#x27F8;")
      (#\⟺ "&DoubleLongLeftRightArrow;" "&#10234;" "&#x27FA;")
      (#\⟹ "&DoubleLongRightArrow;" "&#10233;" "&#x27F9;")
      (#\⇒ "&DoubleRightArrow;" "&#8658;" "&#x21D2;")
      (#\⊨ "&DoubleRightTee;" "&#8872;" "&#x22A8;")
      (#\⇑ "&DoubleUpArrow;" "&#8657;" "&#x21D1;")
      (#\⇕ "&DoubleUpDownArrow;" "&#8661;" "&#x21D5;")
      (#\∥ "&DoubleVerticalBar;" "&#8741;" "&#x2225;")
      (#\↓ "&DownArrow;" "&#8595;" "&#x2193;")
      (#\⤓ "&DownArrowBar;" "&#10515;" "&#x2913;")
      (#\⇵ "&DownArrowUpArrow;" "&#8693;" "&#x21F5;")
      (#\̑ "&DownBreve;" "&#785;" "&#x0311;")
      (#\⥐ "&DownLeftRightVector;" "&#10576;" "&#x2950;")
      (#\⥞ "&DownLeftTeeVector;" "&#10590;" "&#x295E;")
      (#\↽ "&DownLeftVector;" "&#8637;" "&#x21BD;")
      (#\⥖ "&DownLeftVectorBar;" "&#10582;" "&#x2956;")
      (#\⥟ "&DownRightTeeVector;" "&#10591;" "&#x295F;")
      (#\⇁ "&DownRightVector;" "&#8641;" "&#x21C1;")
      (#\⥗ "&DownRightVectorBar;" "&#10583;" "&#x2957;")
      (#\⊤ "&DownTee;" "&#8868;" "&#x22A4;")
      (#\↧ "&DownTeeArrow;" "&#8615;" "&#x21A7;")
      (#\⇓ "&Downarrow;" "&#8659;" "&#x21D3;")
      (#\𝒟 "&Dscr;" "&#119967;"  "&#xDC9F;")
      (#\Đ "&Dstrok;" "&#272;" "&#x0110;")
      (#\Ŋ "&ENG;" "&#330;" "&#x014A;")
      (#\Ð "&ETH" "&#208;" "&#x00D0;")
      (#\Ð "&ETH;" "&#208;" "&#x00D0;")
      (#\É "&Eacute" "&#201;" "&#x00C9;")
      (#\É "&Eacute;" "&#201;" "&#x00C9;")
      (#\Ě "&Ecaron;" "&#282;" "&#x011A;")
      (#\Ê "&Ecirc" "&#202;" "&#x00CA;")
      (#\Ê "&Ecirc;" "&#202;" "&#x00CA;")
      (#\Э "&Ecy;" "&#1069;" "&#x042D;")
      (#\Ė "&Edot;" "&#278;" "&#x0116;")
      (#\𝔈 "&Efr;" "&#120072;"  "&#xDD08;")
      (#\È "&Egrave" "&#200;" "&#x00C8;")
      (#\È "&Egrave;" "&#200;" "&#x00C8;")
      (#\∈ "&Element;" "&#8712;" "&#x2208;")
      (#\Ē "&Emacr;" "&#274;" "&#x0112;")
      (#\◻ "&EmptySmallSquare;" "&#9723;" "&#x25FB;")
      (#\▫ "&EmptyVerySmallSquare;" "&#9643;" "&#x25AB;")
      (#\Ę "&Eogon;" "&#280;" "&#x0118;")
      (#\𝔼 "&Eopf;" "&#120124;"  "&#xDD3C;")
      (#\Ε "&Epsilon;" "&#917;" "&#x0395;")
      (#\⩵ "&Equal;" "&#10869;" "&#x2A75;")
      (#\≂ "&EqualTilde;" "&#8770;" "&#x2242;")
      (#\⇌ "&Equilibrium;" "&#8652;" "&#x21CC;")
      (#\ℰ "&Escr;" "&#8496;" "&#x2130;")
      (#\⩳ "&Esim;" "&#10867;" "&#x2A73;")
      (#\Η "&Eta;" "&#919;" "&#x0397;")
      (#\Ë "&Euml" "&#203;" "&#x00CB;")
      (#\Ë "&Euml;" "&#203;" "&#x00CB;")
      (#\∃ "&Exists;" "&#8707;" "&#x2203;")
      (#\ⅇ "&ExponentialE;" "&#8519;" "&#x2147;")
      (#\Ф "&Fcy;" "&#1060;" "&#x0424;")
      (#\𝔉 "&Ffr;" "&#120073;"  "&#xDD09;")
      (#\◼ "&FilledSmallSquare;" "&#9724;" "&#x25FC;")
      (#\▪ "&FilledVerySmallSquare;" "&#9642;" "&#x25AA;")
      (#\𝔽 "&Fopf;" "&#120125;"  "&#xDD3D;")
      (#\∀ "&ForAll;" "&#8704;" "&#x2200;")
      (#\ℱ "&Fouriertrf;" "&#8497;" "&#x2131;")
      (#\ℱ "&Fscr;" "&#8497;" "&#x2131;")
      (#\Ѓ "&GJcy;" "&#1027;" "&#x0403;")
      (#\> "&GT" "&#62;" "&#x003E;")
      (#\> "&GT;" "&#62;" "&#x003E;")
      (#\Γ "&Gamma;" "&#915;" "&#x0393;")
      (#\Ϝ "&Gammad;" "&#988;" "&#x03DC;")
      (#\Ğ "&Gbreve;" "&#286;" "&#x011E;")
      (#\Ģ "&Gcedil;" "&#290;" "&#x0122;")
      (#\Ĝ "&Gcirc;" "&#284;" "&#x011C;")
      (#\Г "&Gcy;" "&#1043;" "&#x0413;")
      (#\Ġ "&Gdot;" "&#288;" "&#x0120;")
      (#\𝔊 "&Gfr;" "&#120074;"  "&#xDD0A;")
      (#\⋙ "&Gg;" "&#8921;" "&#x22D9;")))


(defun entity-trie (entities-list &optional (trie (make-trie)) (fn #'identity))
  (loop for entity-list in entities-list
     for character = (car entity-list)
     for entities = (cdr entity-list)
     do (loop for entity in entities
	   do (insert-word (funcall fn entity) trie character)))
  trie)

(define-test trie...
  :parent stw-tries...
  (let ((trie (entity-trie *entity-reference*)))
    (loop
      for entity-list in *entity-reference*
      for character = (car entity-list)
      for entities = (cdr entity-list)
      do (loop
	   for entity in entities
	   do (is char= character (find-word entity trie))))))

(define-test rtrie...
  :parent stw-tries...
  (let ((rtrie (entity-trie *entity-reference* (make-radix-trie))))
    (loop
      for entity-list in *entity-reference*
      for character = (car entity-list)
      for entities = (cdr entity-list)
      do (loop
	   for entity in entities
	   do (is char= character (find-word entity rtrie))))))

(define-test btrie...
  :parent stw-tries...
  (let ((btrie (entity-trie *entity-reference* (make-byte-trie) #'util.binary:string-to-octets)))
    (loop
      for entity-list in *entity-reference*
      for character = (car entity-list)
      for entities = (cdr entity-list)
      do (loop
	   for entity in entities
	   do (is char= character (find-word (util.binary:string-to-octets entity) btrie))))))
